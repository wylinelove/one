{"remainingRequest":"D:\\资料\\12vue UI\\day05\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\资料\\12vue UI\\day05\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\资料\\12vue UI\\day05\\vue_app_000\\vue_app_00\\src\\components\\xz\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\资料\\12vue UI\\day05\\vue_app_000\\vue_app_00\\src\\components\\xz\\Login.vue","mtime":1570349687138},{"path":"D:\\资料\\12vue UI\\day05\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\资料\\12vue UI\\day05\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\资料\\12vue UI\\day05\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      uname: \"\",\n      //输入用户名\n      upwd: \"\" //输入密码\n\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      //功能:完成用户登录操作\n      //1:获取用户输入用户名\n      var u = this.uname; //2:获取用户输入密码\n\n      var p = this.upwd;\n      console.log(\"1:\" + u + \"_\" + p); //3:创建正则表达式 3~12 字母数字\n\n      var reg = /^[a-z0-9]{3,12}$/i; //4:验证用户名\n\n      if (reg.test(u) == false) {\n        console.log(\"2:\"); //5:验证不成功 提示消息\n\n        this.$messagebox(\"用户名格式不正确\");\n        return;\n      } //6:验证密码\n\n\n      if (reg.test(p) == false) {\n        //7:验证不成功 提示消息\n        this.$messagebox(\"\", \"密码格式不正确\");\n        return;\n      } //8:发送ajax请求\n\n\n      var url = \"login\";\n      var obj = {\n        uname: u,\n        upwd: p\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        console.log(res.data.code);\n\n        if (res.data.code < 0) {\n          _this.$messagebox(\"消息\", \"用户名或密码有误\");\n        } else {\n          //跳转Product组件 //9:47\n          _this.$router.push(\"/Product\");\n        }\n      }); //9:获取服务器返回结果\n      //10:登录失败提示消息\n      //11:登录成功跳转 /Product\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AACA;AACA,YAAA,EAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA,SADA,mBACA;AAAA;;AACA;AACA;AACA,UAAA,IAAA,KAAA,KAAA,CAHA,CAIA;;AACA,UAAA,IAAA,KAAA,IAAA;AACA,cAAA,GAAA,CAAA,OAAA,CAAA,GAAA,GAAA,GAAA,CAAA,EANA,CAOA;;AACA,UAAA,MAAA,mBAAA,CARA,CASA;;AACA,UAAA,IAAA,IAAA,CAAA,CAAA,KAAA,KAAA,EAAA;AACA,gBAAA,GAAA,CAAA,IAAA,EADA,CAEA;;AACA,aAAA,WAAA,CAAA,UAAA;AACA;AACA,OAfA,CAgBA;;;AACA,UAAA,IAAA,IAAA,CAAA,CAAA,KAAA,KAAA,EAAA;AACA;AACA,aAAA,WAAA,CAAA,EAAA,EAAA,SAAA;AACA;AACA,OArBA,CAsBA;;;AACA,UAAA,MAAA,OAAA;AACA,UAAA,MAAA;AAAA,eAAA,CAAA;AAAA,cAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CACA,GADA,EAEA;AAAA,gBAAA;AAAA,OAFA,EAGA,IAHA,CAGA,eAAA;AACA,gBAAA,GAAA,CAAA,IAAA,IAAA,CAAA,IAAA;;AACA,YAAA,IAAA,IAAA,CAAA,IAAA,GAAA,CAAA,EAAA;AACA,gBAAA,WAAA,CAAA,IAAA,EAAA,UAAA;AACA,SAFA,MAEA;AACA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA,OAXA,EAzBA,CAqCA;AACA;AACA;AACA;AAzCA;AAPA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <h4>Login.vue</h4>\r\n    <!--1:用户名输入框-->\r\n    <mt-field label=\"用户名\" placeholder=\"请输入用户名\" v-model=\"uname\" :attr=\"{autofocus:true}\"></mt-field>\r\n    <!--2:密码输入框-->\r\n    <mt-field label=\"密码\" placeholder=\"请输入密码\" v-model=\"upwd\"></mt-field>\r\n    <!--3:登录按钮-->\r\n    <mt-button size=\"large\" @click=\"login\">登录</mt-button>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {\r\n      uname:\"\", //输入用户名\r\n      upwd:\"\"   //输入密码\r\n    }\r\n  },\r\n  methods:{\r\n    login(){\r\n     //功能:完成用户登录操作\r\n     //1:获取用户输入用户名\r\n     var u = this.uname;\r\n     //2:获取用户输入密码\r\n     var p = this.upwd;\r\n     console.log(\"1:\"+u+\"_\"+p);\r\n     //3:创建正则表达式 3~12 字母数字\r\n     var reg = /^[a-z0-9]{3,12}$/i;\r\n     //4:验证用户名\r\n     if(reg.test(u)==false){\r\n      console.log(\"2:\");\r\n      //5:验证不成功 提示消息\r\n      this.$messagebox(\"用户名格式不正确\");\r\n      return;\r\n     }\r\n     //6:验证密码\r\n     if(reg.test(p)==false){\r\n      //7:验证不成功 提示消息\r\n      this.$messagebox(\"\",\"密码格式不正确\");\r\n      return;\r\n     }\r\n     //8:发送ajax请求\r\n     var url = \"login\";\r\n     var obj = {uname:u,upwd:p};\r\n     this.axios.get(\r\n       url,\r\n       {params:obj}\r\n     ).then(res=>{\r\n       console.log(res.data.code);\r\n       if(res.data.code<0){\r\n         this.$messagebox(\"消息\",\"用户名或密码有误\");\r\n       }else{\r\n         //跳转Product组件 //9:47\r\n         this.$router.push(\"/Product\");\r\n       }\r\n     });\r\n     //9:获取服务器返回结果\r\n     //10:登录失败提示消息\r\n     //11:登录成功跳转 /Product\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src\\components\\xz"}]}